package greendao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import java.net.HttpCookie;
import java.util.Calendar;
// KEEP INCLUDES END
/**
 * Entity mapped to table COOKIES.
 */
public class Cookies {

    private Long id;
    /** Not-null value. */
    private String name;
    /** Not-null value. */
    private String value;
    private long expiration;
    /** Not-null value. */
    private String domain;
    /** Not-null value. */
    private String path;
    private int secure;
    private int http_secure;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Cookies() {
    }

    public Cookies(Long id) {
        this.id = id;
    }

    public Cookies(Long id, String name, String value, long expiration, String domain, String path, int secure, int http_secure) {
        this.id = id;
        this.name = name;
        this.value = value;
        this.expiration = expiration;
        this.domain = domain;
        this.path = path;
        this.secure = secure;
        this.http_secure = http_secure;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /** Not-null value. */
    public String getName() {
        return name;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setName(String name) {
        this.name = name;
    }

    /** Not-null value. */
    public String getValue() {
        return value;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setValue(String value) {
        this.value = value;
    }

    public long getExpiration() {
        return expiration;
    }

    public void setExpiration(long expiration) {
        this.expiration = expiration;
    }

    /** Not-null value. */
    public String getDomain() {
        return domain;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setDomain(String domain) {
        this.domain = domain;
    }

    /** Not-null value. */
    public String getPath() {
        return path;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setPath(String path) {
        this.path = path;
    }

    public int getSecure() {
        return secure;
    }

    public void setSecure(int secure) {
        this.secure = secure;
    }

    public int getHttp_secure() {
        return http_secure;
    }

    public void setHttp_secure(int http_secure) {
        this.http_secure = http_secure;
    }

    // KEEP METHODS - put your custom methods here

    public HttpCookie toHttpCookie() {
        HttpCookie cookie = null;

        long expiration = 0;
        try {
            expiration = getExpiration();
        } catch (Exception e) {
        }

        String domain = getDomain();
        String path = getPath();

        int secureFlag = 0;
        try {
            secureFlag = getSecure();
        } catch (Exception e) {
        }

        //Currently no use or need to use the HTTP-only flag in cookies for now
        cookie = new HttpCookie(getName(), getValue());
        cookie.setVersion(0);

        long currentTimeInSeconds = Calendar.getInstance().getTimeInMillis() / 1000;
        if (currentTimeInSeconds < expiration) {
            long maxAge = expiration - currentTimeInSeconds;
            cookie.setMaxAge(maxAge);
        }

        if (secureFlag != 0) {
            cookie.setSecure(true);
        }

        if (domain != null && domain.length() > 0) {
            cookie.setDomain(domain);
            if (path != null && path.length() > 0) {
                cookie.setPath(path);
            } else {
                cookie.setPath("/");
            }
            return cookie;
        }
        return null;
    }
    // KEEP METHODS END

}
